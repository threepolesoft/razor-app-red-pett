@using MudBlazor;
@using ReDpett.Service
@*@using Microsoft.Maui.Controls
*@
@inject NavigationManager NavigationManager;
@inject ListAppDataService _listData;
@inject ISaveDataService _OfflineDataService;
@inject IJSRuntime JS
@using Blazored.LocalStorage

@inject ILocalStorageService local;
<div class="inner-page-wrapper">
    <div class="header-wrap">
        <div class="back-top-page" @onclick=GoPrevPage>
            <span class="back-btn">
                <img src="images/back.png" style="width:20px;height:20px" alt="img" />
            </span>
        </div>
    </div>
    <div class="add-project-adata-wrap">
        <div class="page-heading-wrap">
            @if (role == "Resident")
            {
                <h2>ReDPeTT-Frontline</h2>
            }
            else if (role == "Non-Residnet")
            {
                <h2>ReDPeTT-Intermediate Resident</h2>
            }
            <img src="images/border-svg.svg" alt="img" />
        </div>
        <div class="page-info-text">
            Recommendation: complete the Resident and Job &
            Site pages at the start of your cohort.
            Throughout your training, add new Projects (or update entries) as needed.
        </div>
        <div class="page-stepper-wrap">
            <div class="stepper-sepeat active-step" @onclick=GoToStepOne>
                <div class="stepper-count-wrap">
                    <span>1</span>
                </div>
                <p>Resident </p>
            </div>
            <div class="stepper-sepeat" @onclick=GoNextPage>
                <div class="stepper-count-wrap">
                    <span>2</span>
                </div>
                <p>Job & Site</p>
            </div>
            <div class="stepper-sepeat">
                <div class="stepper-count-wrap" @onclick=GoToStepThree>
                    <span>3</span>
                </div>
                <p>Projects</p>
            </div>
        </div>
        <div class="all-form-wraper">
            <div class="form-set-repeat">
                <div class="form-group">
                    <label>FETP *</label>
                    <select class="form-control " @bind=FETP style=@IsFETPError @oninput=OnInputFETPChange>
                        <option value="">Select FETP</option>
                        <option value="5-Bangladesh FETP-Frontline">5-Bangladesh FETP-Frontline</option>
                        <option value="6-Belize FETP-Non-Standard Frontline">6-Belize FETP-Non-Standard Frontline</option>
                        <option value="8-Benin FETP-Frontline">8-Benin FETP-Frontline</option>
                        <option value="10-Brazil FETP-Frontline">10-Brazil FETP-Frontline</option>
                        <option value="11-Burkina Faso FETP-Frontline">11-Burkina Faso FETP-Frontline</option>
                        <option value="13-Cameroon FETP-Frontline">13-Cameroon FETP-Frontline</option>
                        <option value="19-China FETP-Frontline">19-China FETP-Frontline</option>
                        <option value="21-Colombia FETP (Program de Epidemilogia Aplicada)-Frontline">21-Colombia FETP (Program de Epidemilogia Aplicada)-Frontline</option>
                        <option value="24-Costa Rica FETP-Non-Standard Frontline">24-Costa Rica FETP-Non-Standard Frontline</option>
                        <option value="25-Cote d'Ivoire FETP-Frontline">25-Cote d'Ivoire FETP-Frontline</option>
                        <option value="27-Democratic Republic of the Congo FETP-Frontline">27-Democratic Republic of the Congo FETP-Frontline</option>
                        <option value="31-El Salvador FETP-Non-Standard Frontline">31-El Salvador FETP-Non-Standard Frontline</option>
                        <option value="33-Ethiopia FETP-Frontline">33-Ethiopia FETP-Frontline</option>
                        <option value="34-The Gambia FETP-Frontline">34-The Gambia FETP-Frontline</option>
                        <option value="36-Ghana Public Health School Without Walls">36-Ghana Public Health School Without Walls</option>
                        <option value="38-Ghana FETP-Frontline">38-Ghana FETP-Frontline</option>
                        <option value="39-Grenada Field Epidemiology Training Program-Frontline">39-Grenada Field Epidemiology Training Program-Frontline</option>
                        <option value="41-Guatemala FETP-Non-Standard Frontline">41-Guatemala FETP-Non-Standard Frontline</option>
                        <option value="42-Guinea FETP-Frontline">42-Guinea FETP-Frontline</option>
                        <option value="43-Guinea-Bissau FETP-Frontline">43-Guinea-Bissau FETP-Frontline</option>
                        <option value="45-Haiti FETP-Non-Standard Frontline">45-Haiti FETP-Non-Standard Frontline</option>
                        <option value="47-Honduras FETP-Non-Standard Frontline">47-Honduras FETP-Non-Standard Frontline</option>
                        <option value="51-India Epidemic Intelligence Service">51-India Epidemic Intelligence Service</option>
                        <option value="59-Kenya FETP-Non-Standard Frontline">59-Kenya FETP-Non-Standard Frontline</option>
                        <option value="62-Liberia FETP-Frontline">62-Liberia FETP-Frontline</option>
                        <option value="63-Malawi FETP-Frontline">63-Malawi FETP-Frontline</option>
                        <option value="64-Mali FETP-Frontline">64-Mali FETP-Frontline</option>
                        <option value="65-Mauritania FETP-Frontline">65-Mauritania FETP-Frontline</option>
                        <option value="70-Myanmar FETP-Frontline">70-Myanmar FETP-Frontline</option>
                        <option value="73-Nigeria FETP-Frontline">73-Nigeria FETP-Frontline</option>
                        <option value="75-Pakistan FETP-Frontline">75-Pakistan FETP-Frontline</option>
                        <option value="78-Paraguay FETP-Frontline">78-Paraguay FETP-Frontline</option>
                        <option value="81-Peru FETP-Frontline">81-Peru FETP-Frontline</option>
                        <option value="85-Senegal FETP-Frontline">85-Senegal FETP-Frontline</option>
                        <option value="87-Sierra Leone FETP-Frontline">87-Sierra Leone FETP-Frontline</option>
                        <option value="89-South Africa FETP-Frontline">89-South Africa FETP-Frontline</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Cohort Number *</label>
                    <input class="form-control " type="number" placeholder="Cohort Number" @bind=CohortNumber style=@IsChrNumError @oninput=OnInputCohortNumberChange />
                </div>
                <div class="form-group">
                    <label>Cohort Start Date</label>
                    <MudDatePicker Label="yyyy-MM-dd" Editable="true" @bind-Date="CohortStartDate" Mask="@(new DateMask("0000-00-00"))" DateFormat="yyyy-MM-dd" Placeholder="Cohort Start Date" />

                    @*                    <input type="date" @bind=CohortStartDate class="form-control date-cal" />
                    *@
                </div>
                <div class="form-group">
                    <label>Cohort End Date</label>
                    <MudDatePicker Label="yyyy-MM-dd" Editable="true" @bind-Date="CohortEndDate" Mask="@(new DateMask("0000-00-00"))" DateFormat="yyyy-MM-dd" Placeholder="Cohort End Date" />

                    @*                    <input type="date" @bind=CohortEndDate class="form-control date-cal" />
                    *@
                </div>
            </div>
            <div class="form-set-repeat">
                <div class="page-heading-wrap">
                    <h2>Demographics</h2>
                    <img src="images/border-svg.svg" alt="img">
                </div>
                @*<div class="form-group">
                <label>Resident Name</label>
                <input type="text" readonly class="form-control " @bind=ResidentName />

                </div>*@
                <div class="form-group">
                    <label>Given/First Name</label>
                    <input type="text" placeholder="First Name" class="form-control " @onchange=OnInputResidentNameChange @bind=Given_FirstName @bind:event="oninput" />
                </div>
                @* <div class="form-group">
                <label>Middle Name</label>
                <input type="text" placeholder="Middle Name" class="form-control " @onchange=OnInputResidentNameChange @bind=MiddleName @bind:event="oninput" />
                </div>*@
                <div class="form-group">
                    <label>Surname /Last Name</label>
                    <input type="text" placeholder="Last Name" class="form-control " @onchange=OnInputResidentNameChange @bind=Sur_LastName @bind:event="oninput" />
                </div>
                <div class="form-group">
                    <label>Date of Birth *</label>
                    <MudDatePicker Label="yyyy-MM-dd" Editable="true" @bind-Date="DOB" PickerClosed=OnInputDOBChange Mask="@(new DateMask("0000-00-00"))" DateFormat="yyyy-MM-dd" Placeholder="Cohort End Date" />

                    @*                    <input type="date" class="form-control date-cal" @bind=DOB style=@IsDOBError @onchange=OnInputDOBChange @bind:event="oninput" />
                    *@
                </div>
                <div class="form-group">
                    <label>Age</label>
                    <input type="text" disabled placeholder="Age" class="form-control " @bind=Age />
                </div>
                <div class="form-group">
                    <label>Sex *</label>
                    <select class="form-control " @bind=Sex style=@IsSexError @oninput=OnInputSexChange>
                        <option value="">Select</option>
                        <option value="MALE">Male</option>
                        <option value="FEMALE">Female</option>
                        <option value="OTHERS">Other</option>
                    </select>
                </div>
            </div>
            <div class="form-set-repeat">
                <div class="page-heading-wrap">
                    <h2>Contact Information</h2>
                    <img src="images/border-svg.svg" alt="img">
                </div>
                <div class="form-group">
                    <label>Email</label>
                    <input type="email" placeholder="" class="form-control " @bind=Email />
                </div>
                <div class="form-group">
                    <label>Phone</label>
                    <input type="text" id="mobile_code" class="form-control" placeholder="" name="name" @bind=Phone>
                </div>
                <div class="form-button-wrap">
                    <button class="button primary-btn" @onclick=OnSaveData>Save</button>
                    <button class="button" @onclick=GoNextPage>Next</button>
                </div>
            </div>
        </div>
    </div>
    <footer class="footer-wrap">
        <div class="footer-inner">
            <a href="/dashboard" class="footer-link">
                <svg width="26" height="25" viewBox="0 0 26 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M10.9525 20.5769V17.7619C10.9525 17.0433 11.5393 16.4608 12.2631 16.4608H14.9092C15.2568 16.4608 15.5901 16.5979 15.8359 16.8419C16.0817 17.0859 16.2198 17.4168 16.2198 17.7619V20.5769C16.2176 20.8757 16.3356 21.1629 16.5476 21.375C16.7597 21.587 17.0482 21.7062 17.3491 21.7062H19.1543C19.9974 21.7084 20.8068 21.3774 21.4037 20.7863C22.0007 20.1953 22.3362 19.3927 22.3362 18.5557V10.5362C22.3362 9.86009 22.0343 9.21877 21.5119 8.78499L15.3708 3.91601C14.3025 3.06231 12.7719 3.08988 11.7356 3.98148L5.73461 8.78499C5.18751 9.20598 4.86052 9.8492 4.84436 10.5362V18.5475C4.84436 20.292 6.26891 21.7062 8.02619 21.7062H9.7902C10.4152 21.7062 10.9232 21.2056 10.9277 20.5851L10.9525 20.5769Z" fill="#D0D0D0" />
                </svg>
                <p>Home</p>
            </a>
            <a href="/add_project_step_1/dummy_guid" class="footer-link active">
                <svg width="26" height="25" viewBox="0 0 26 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M14.4189 3.47566C14.4189 3.23918 14.2316 3.04053 13.988 3.04053H8.98668C6.65458 3.04053 4.76268 4.96081 4.76268 7.30677V17.5041C4.76268 19.9636 6.74824 21.9596 9.18336 21.9596H16.6386C18.9613 21.9596 20.8439 20.0582 20.8439 17.7122V10.1068C20.8439 9.8703 20.6565 9.68111 20.4224 9.68111C20.2046 9.68111 19.9649 9.68387 19.7447 9.68641C19.6257 9.68779 19.5123 9.6891 19.4112 9.68986L19.2517 9.69057C19.0631 9.69057 18.8495 9.68875 18.6092 9.68672C18.3004 9.6841 17.9474 9.68111 17.5471 9.68111C15.8331 9.67165 14.4189 8.25272 14.4189 6.52163V3.47566ZM16.5535 3.58161C16.2735 3.28742 15.7837 3.48985 15.7837 3.89756V6.39109C15.7837 7.43731 16.6369 8.29907 17.6728 8.29907C18.3256 8.30569 19.2331 8.30853 20.003 8.30569C20.3973 8.30475 20.5977 7.82893 20.3242 7.54231C19.8309 7.02425 19.1435 6.30216 18.4527 5.57651C17.7586 4.84732 17.061 4.11453 16.5535 3.58161Z" fill="#D0D0D0" />
                    <path d="M12.8033 17.3393V10.7802" stroke="black" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                    <path d="M9.52373 14.0597H16.0828" stroke="black" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
                <p>Add Project</p>
            </a>
            <a href="/Projects" class="footer-link">
                <svg width="26" height="25" viewBox="0 0 26 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M13.9881 3.04053C14.2316 3.04053 14.4189 3.23918 14.4189 3.47566V6.52163C14.4189 8.25272 15.8331 9.67165 17.5471 9.68111C18.2589 9.68111 18.8208 9.69057 19.2517 9.69057L19.4112 9.68986C19.6992 9.68767 20.0868 9.68111 20.4224 9.68111C20.6566 9.68111 20.8439 9.8703 20.8439 10.1068V17.7122C20.8439 20.0582 18.9613 21.9596 16.6386 21.9596H9.18338C6.74826 21.9596 4.7627 19.9636 4.7627 17.5041V7.30677C4.7627 4.96081 6.6546 3.04053 8.9867 3.04053H13.9881ZM14.9902 15.2433H9.89518C9.51118 15.2433 9.19275 15.5555 9.19275 15.9433C9.19275 16.3311 9.51118 16.6528 9.89518 16.6528H14.9902C15.3742 16.6528 15.6926 16.3311 15.6926 15.9433C15.6926 15.5555 15.3742 15.2433 14.9902 15.2433ZM13.0608 10.5135H9.89518C9.51118 10.5135 9.19275 10.8352 9.19275 11.223C9.19275 11.6108 9.51118 11.923 9.89518 11.923H13.0608C13.4448 11.923 13.7633 11.6108 13.7633 11.223C13.7633 10.8352 13.4448 10.5135 13.0608 10.5135ZM15.7837 3.89756C15.7837 3.48985 16.2735 3.28742 16.5536 3.58161C17.566 4.64486 19.3352 6.50365 20.3243 7.54231C20.5977 7.82893 20.3973 8.30475 20.003 8.30569C19.2331 8.30853 18.3256 8.30569 17.6728 8.29907C16.6369 8.29907 15.7837 7.43731 15.7837 6.39109V3.89756Z" fill="#D0D0D0" />
                </svg>
                <p>Project</p>
            </a>
            <a href="/" class="footer-link">
                <svg width="26" height="25" viewBox="0 0 26 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M13.6747 3.09274C14.3861 3.09274 15.0303 3.48785 15.386 4.07109C15.559 4.35331 15.6744 4.70138 15.6455 5.06826C15.6263 5.35048 15.7128 5.63269 15.8667 5.89609C16.357 6.69571 17.4433 6.99674 18.2893 6.54519C19.2411 5.99957 20.4428 6.32883 20.9908 7.26014L21.6349 8.37019C22.1925 9.30151 21.8849 10.4962 20.9235 11.0324C20.1063 11.5122 19.8179 12.5752 20.3082 13.3842C20.462 13.6382 20.6351 13.8546 20.9043 13.9863C21.2408 14.165 21.5003 14.4473 21.683 14.7295C22.0387 15.3127 22.0099 16.0277 21.6638 16.658L20.9908 17.7868C20.6351 18.3889 19.9717 18.7652 19.2892 18.7652C18.9527 18.7652 18.5777 18.6711 18.2701 18.483C18.0201 18.323 17.7317 18.2666 17.4241 18.2666C16.4723 18.2666 15.6744 19.0474 15.6455 19.9787C15.6455 21.0605 14.7611 21.9072 13.6555 21.9072H12.348C11.2328 21.9072 10.3483 21.0605 10.3483 19.9787C10.3291 19.0474 9.53117 18.2666 8.57941 18.2666C8.26215 18.2666 7.97374 18.323 7.7334 18.483C7.42575 18.6711 7.0412 18.7652 6.71434 18.7652C6.02214 18.7652 5.35879 18.3889 5.00308 17.7868L4.33973 16.658C3.98402 16.0465 3.96479 15.3127 4.3205 14.7295C4.47432 14.4473 4.76274 14.165 5.08961 13.9863C5.35879 13.8546 5.53184 13.6382 5.69527 13.3842C6.17596 12.5752 5.88755 11.5122 5.07038 11.0324C4.11861 10.4962 3.81097 9.30151 4.35896 8.37019L5.00308 7.26014C5.56068 6.32883 6.75279 5.99957 7.71417 6.54519C8.55057 6.99674 9.63692 6.69571 10.1272 5.89609C10.281 5.63269 10.3676 5.35048 10.3483 5.06826C10.3291 4.70138 10.4349 4.35331 10.6175 4.07109C10.9732 3.48785 11.6174 3.11156 12.3192 3.09274H13.6747ZM13.0114 9.84713C11.502 9.84713 10.281 11.0324 10.281 12.5094C10.281 13.9863 11.502 15.1622 13.0114 15.1622C14.5207 15.1622 15.7128 13.9863 15.7128 12.5094C15.7128 11.0324 14.5207 9.84713 13.0114 9.84713Z" fill="#D0D0D0" />
                </svg>
                <p>Setting </p>
            </a>
        </div>
    </footer>
</div>

@code {

    [Parameter]
    public string E_GUID { get; set; }
    public string FETP { get; set; }
    public string role { get; set; }

    public string CohortNumber { get; set; }
    public DateTime? CohortEndDate { get; set; }
    public DateTime? CohortStartDate { get; set; }
    public string ResidentName { get; set; }
    public string Given_FirstName { get; set; }
    public string MiddleName { get; set; }
    public string Sur_LastName { get; set; }
    public DateTime? DOB { get; set; }
    public int Age { get; set; }
    public string Sex { get; set; }
    public string Email { get; set; }
    public string Phone { get; set; }
    public string IsFETPError { get; set; }
    public string IsChrNumError { get; set; }
    public string IsDOBError { get; set; }
    public string IsSexError { get; set; }
    private string ModalClassAddProject { get; set; } = "footer-link";
    private string ModalClassProject { get; set; } = "footer-link";
    private string ModalClassHome { get; set; } = "footer-link";
    private string ModalClassSetting { get; set; } = "footer-link";
    private AppDataService data = new AppDataService();
    public string token { get; set; }

    protected async override void OnInitialized()
    {
        try
        {
            role = await local.GetItemAsync<string>("UserRole");

            token = await local.GetItemAsync<string>("oauth_token");
            if (token != null)
            {
                _listData = await local.GetItemAsync<ListAppDataService>("list");
                if (_listData != null)
                {
                    if (_listData.appDataServices != null)
                    {
                        var _data = _listData.appDataServices.Find(x => x.GUID == E_GUID);
                        if (_data != null)
                        {
                            data = _data;
                        }
                    }
                    else
                    {
                        _listData.appDataServices = new List<AppDataService>();
                    }
                }
                else
                {
                    _listData = new ListAppDataService();
                    _listData.appDataServices = new List<AppDataService>();
                }

                FETP = data.FETP;
                CohortNumber = data.CohortNumber;

                if (data.CohortEndDate != null)
                {
                    CohortEndDate = Convert.ToDateTime(data.CohortEndDate);
                }
                if (data.CohortStartDate != null)
                {
                    CohortStartDate = Convert.ToDateTime(data.CohortStartDate);
                }

                ResidentName = data.ResidentName;
                Given_FirstName = data.Given_FirstName;
                MiddleName = data.MiddleName;
                Sur_LastName = data.Sur_LastName;
                if (data.DOB != null)
                {
                    DOB = Convert.ToDateTime(data.DOB);
                }
                Age = data.Age;
                Sex = data.Sex;
                Email = data.Email;
                Phone = data.Phone;
                if (CohortEndDate != null)
                {
                    if (CohortEndDate.Value.Year < 1700)
                    {
                        CohortEndDate = null;
                    }
                }
                if (CohortStartDate != null)
                {
                    if (CohortStartDate.Value.Year < 1700)
                    {
                        CohortStartDate = null;
                    }
                }
                if (DOB != null)
                {
                    if (DOB.Value.Year < 1700)
                    {
                        DOB = null;
                    }
                }
                this.StateHasChanged();
            }
            else
            {
                NavigationManager.NavigateTo("/");
            }

        }
        catch (Exception ex)
        {
            // await Application.Current.MainPage.DisplayAlert("Alert!", ex.ToString(), "OK");
        }

    }



    public void OnInputFETPChange()
    {
        IsFETPError = "";
    }

    public void OnInputCohortNumberChange()
    {
        IsChrNumError = "";
    }

    public void OnInputDOBChange()
    {
        IsDOBError = "";
        if (DOB != null)
        {
            Age = DateTime.Now.Year - DOB.Value.Year;
            if (DateTime.Now.Month < DOB.Value.Month || (DateTime.Now.Month == DOB.Value.Month && DateTime.Now.Day < DOB.Value.Day))
            {
                Age--;
            }
            // = Convert.ToInt32(DateTime.Now.ToString("yyyy")) - Convert.ToInt32(DOB.Value.ToString("yyyy"));
        }
    }

    public void OnInputSexChange()
    {
        IsSexError = "";
    }

    public void OnInputResidentNameChange()
    {
        StateHasChanged();
        ResidentName = Given_FirstName + " " + MiddleName + " " + Sur_LastName;
        StateHasChanged();
    }

    private async Task<bool> ValidateData()
    {
        bool IsValid = true;

        if (String.IsNullOrWhiteSpace(FETP))
        {
            IsFETPError = "border-color:red";
        }
        if (String.IsNullOrWhiteSpace(CohortNumber))
        {
            IsChrNumError = "border-color:red";
        }
        if (String.IsNullOrWhiteSpace(Convert.ToString(DOB)))
        {
            IsDOBError = "border-color:red";
        }
        if (String.IsNullOrWhiteSpace(Sex))
        {
            IsSexError = "border-color:red";
        }
        if ((String.IsNullOrWhiteSpace(FETP)) || (String.IsNullOrWhiteSpace(CohortNumber)) || (String.IsNullOrWhiteSpace(Convert.ToString(DOB))) || (String.IsNullOrWhiteSpace(Sex)))
        {
            try
            {
                IsValid = false;
                await JS.InvokeVoidAsync("alert", "Please Provide missing fields");

            }
            catch (Exception ex)
            {

                throw;
            }
        }
        else if (CohortStartDate != null && CohortEndDate != null)
        {
            if (CohortStartDate.Value > CohortEndDate.Value)
            {
                IsValid = false;
                await JS.InvokeVoidAsync("alert", "Cohort Start Date should be less than end date..");
            }
        }
        else if (Age == 0 || Age < 0)
        {
            IsValid = false;
            await JS.InvokeVoidAsync("alert", "Please enter a valid Date of birth..");
        }

        StateHasChanged();
        return IsValid;
    }

    private async void OnSaveData()
    {
        SaveData();
        await JS.InvokeVoidAsync("alert", "Data Saved..");
    }

    private async void GoNextPage()
    {
        if (await ValidateData())
        {
            SaveData();
            NavigationManager.NavigateTo("/add_project_step_2/" + data.GUID);
        }
    }

    private void GoPrevPage()
    {
        SaveData();
        NavigationManager.NavigateTo("/dashboard");
    }

    private void GoToStepOne()
    {
        SaveData();
        NavigationManager.NavigateTo("/add_project_step_1/" + data.GUID);
    }

    private async void GoToStepThree()
    {
        if (await ValidateData())
        {
            SaveData();
            NavigationManager.NavigateTo("/add_project_step_3/" + data.GUID);
        }
    }

    private async void SaveData()
    {
        if (E_GUID == "dummy_guid" && !ValidateGUID())
        {
            data.GUID = Guid.NewGuid().ToString();
        }
        data.FETP = FETP;
        data.CohortNumber = CohortNumber;
        data.CohortEndDate = CohortEndDate == null ? null : CohortEndDate.Value.ToString("MM-dd-yyyy");
        data.CohortStartDate = CohortStartDate == null ? null : CohortStartDate.Value.ToString("MM-dd-yyyy");
        data.ResidentName = ResidentName;
        data.Given_FirstName = Given_FirstName;
        data.MiddleName = MiddleName;
        data.Sur_LastName = Sur_LastName;
        data.DOB = DOB == null ? null : DOB.Value.ToString("MM-dd-yyyy");
        data.Age = Age;
        data.Sex = Sex;
        data.Email = Email;
        data.Phone = Phone;

        if (_listData != null)
        {
            var _data = _listData.appDataServices.Find(x => x.GUID == data.GUID);
            if (_data != null)
            {
                _listData.appDataServices.Remove(_data);
                _data = data;
                _listData.appDataServices.Add(_data);
            }
            else
            {
                _listData.appDataServices.Add(data);
            }
        }
        else
        {
            _listData.appDataServices.Add(data);
        }
        _OfflineDataService.InsertOfflineDB(_listData);
    }

    private bool ValidateGUID()
    {
        bool IsValid = false;
        if (_listData != null)
        {
            var _data = _listData.appDataServices.Find(x => x.GUID == data.GUID);
            if (_data != null)
            {
                if (data.GUID != null)
                {
                    IsValid = true;
                }
            }
        }

        return IsValid;
    }
}

